
* Pomodoro Beeminder

  This is a [Beeminder](https://www.beeminder.com/) integration for
  the [Time++ Pomodoro Gnome extension](https://github.com/zagortenay333/timepp__gnome/)

#+BEGIN_SRC shell-script

# https://www.beeminder.com/api/v1/auth_token.json
export BEEMINDER_AUTH='{"username":"alice","auth_token":"something"}'

#+END_SRC


** Data file

   ~$HOME/.local/share/pomodoro_beeminder/db.sqlite~


* Config

** Install with pipx

   #+BEGIN_SRC shell-script
     pipx install git+https://github.com/indigoviolet/pomodoro_beeminder
   #+END_SRC

** supervisor

   - installed with apt

   - fixed permissions error by changing conf: ~/etc/supervisor/supervisord.conf~

     #+BEGIN_SRC conf
       [unix_http_server]
       file=/var/run/supervisor.sock   ; (the path to the socket file)
       chmod=0766                       ; socket file mode (default 0700)
     #+END_SRC

     followed by ~supervisord reread~ or ~sudo service supervisor restart~

   - Program conf

     #+BEGIN_SRC conf
       [program:pomodoro_beeminder_tailer]
       command="/home/venky/.local/bin/pomo_tailer"
       user=venky
       environment=HOME="/home/venky"
       redirect_stderr=true

     #+END_SRC

   - Check status: ~supervisorctl status~

** crontab
#+BEGIN_SRC shell-script
0 10-22 * * * env BEEMINDER_AUTH='{"username":"...","auth_token":"..."}' /home/venky/.local/bin/pomo_poster --goal pomo 2>&1 >> /tmp/pomo_poster.log
#+END_SRC


* Design

** DONE Tailer
   script that continually tails

   ~gdbus monitor --session --dest org.gnome.Shell --object-path
   /timepp/zagortenay333/Pomodoro~

   and logs into a sqlite db

   why:

   - easy to query
   - structured
   - don't need to make different files for each window etc.

** Beeminder

   script that runs periodically*, queries the time spent in pomodoro
   state in the interval, and logs to beeminder

   - track last run in the same db (since we need to query it anyway)

   - periodic runs: we'll do this with cron - supervisord can do a
     limited version of periodic tasks if you write an event listener
     that listens for TICK_60 for example, but this seems convoluted
     and unnecessary. We just need to make sure the beeminder script
     can track last success


* Future

  - Handle gdbus failures through backoff or activity monitoring
  - Terminate pomos on inactivity (but it complicates pomo_time computation)
